 <!-- the parent of LinearLayout is the root view (RootView?),
  which has a width of the entire screen
  wrap_content for the height means the height for the linear
  layout matches the height of its content

  The layout sets up how everything should be ordered on the screen
  -->
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:layout_gravity="center_vertical"
    tools:context=".MainActivity">


    <!--&lt;!&ndash;30sp for the textSize stands for 30 scale-independent pixels-->
    <!--which means that the text will appear basically the same regardless-->
    <!--of the screen size or quality-->
    <!--&ndash;&gt;-->
    <!--<TextView-->
        <!--android:id="@+id/result_text"-->
        <!--android:layout_width="wrap_content"-->
        <!--android:layout_height="wrap_content"-->
        <!--android:text="Hello Android!"-->
        <!--android:layout_gravity="center_horizontal"-->
        <!--android:textSize="30sp"/>-->

    <!-- Adding the button view below the text view means the button
    will appear below the text (at least for a LinearLayout)
    -->

    <ImageView
        android:id="@+id/dice_image"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:src="@drawable/dice_1"/>


    <Button
        android:id="@+id/roll_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:text="@string/roll"/>
        <!-- ^^ the @string/roll refers to the resource in values/strings.xml
        this is the canonical (and better) way of doing things, which allows
        you to modify all locations of the string at once and allows for easy
        operations like translating to a different language
        -->
</LinearLayout>